// Función para definir una paleta de colores personalizada
vec3 palette(float t) {
    vec3 a = vec3(0.5, 0.5, 0.5);
    vec3 b = vec3(0.5, 0.5, 0.5);
    vec3 c = vec3(1.0, 1.0, 1.0);
    vec3 d = vec3(0.263, 0.416, 0.557);

    // Aplicar fórmula de la paleta
    return a + b * cos(112.28318 * (c * t + d));
}

void mainImage(out vec4 fragColor, in vec2 fragCoord) {
    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;
    vec2 uv0 = uv;
    vec3 finalColor = vec3(0.0);

    // Forma 1: Círculo
    float radius = 0.101;
    float distanceToCenter = length(uv);
    float circle = smoothstep(radius - 0.01, radius + 0.01, distanceToCenter);
    vec3 color1 = palette(distanceToCenter - iTime);
    finalColor += color1 * circle;

    // Combinación de formas
    fragColor = vec4(finalColor, 1.0);
}
